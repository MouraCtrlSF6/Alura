{"ast":null,"code":"var _jsxFileName = \"/home/moura/Projetos&Estudos/Estudos/Alura/src/components/ListaDeNotas/ListaDeNotas.jsx\";\nimport React from 'react';\nimport CardNota from '../CardNota';\nimport './ListaDeNotas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListaDeNotas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.notesArray = this.props.notes;\n    this.colors = [{\n      textColor: 'white',\n      backgroundColor: '#ec9706'\n    }, {\n      textColor: 'white',\n      backgroundColor: '#98b4d4'\n    }, {\n      textColor: 'white',\n      backgroundColor: '#ff6961'\n    }, {\n      textColor: 'black',\n      backgroundColor: '#fdfd96'\n    }, {\n      textColor: 'white',\n      backgroundColor: '#03bb85'\n    }];\n  }\n\n  getIndex(index) {\n    const a = index / this.colors.length;\n    const b = a - parseInt(a);\n    return Math.round(b * this.colors.length);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children:\n      /*#__PURE__*/\n      //Assim dá:\n      _jsxDEV(\"ul\", {\n        className: \"list-container\",\n        children: this.notesArray.map((note, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-item\",\n            children: /*#__PURE__*/_jsxDEV(CardNota, {\n              note: note,\n              color: this.colors[this.getIndex(index)]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n} //Eu poderia usar apenas export tbm, mas dai precisaria\n//desestruturar o componente ao importar \n//import { ListaDeNotas } from ... \n\n\nexport default ListaDeNotas;","map":{"version":3,"sources":["/home/moura/Projetos&Estudos/Estudos/Alura/src/components/ListaDeNotas/ListaDeNotas.jsx"],"names":["React","CardNota","ListaDeNotas","Component","constructor","props","notesArray","notes","colors","textColor","backgroundColor","getIndex","index","a","length","b","parseInt","Math","round","render","map","note"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAsB,aAAtB;AACA,OAAO,oBAAP;;;AACA,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,UAAL,GAAkB,KAAKD,KAAL,CAAWE,KAA7B;AACA,SAAKC,MAAL,GAAc,CACZ;AACEC,MAAAA,SAAS,EAAE,OADb;AAEEC,MAAAA,eAAe,EAAE;AAFnB,KADY,EAKZ;AACED,MAAAA,SAAS,EAAE,OADb;AAEEC,MAAAA,eAAe,EAAE;AAFnB,KALY,EASZ;AACED,MAAAA,SAAS,EAAE,OADb;AAEEC,MAAAA,eAAe,EAAE;AAFnB,KATY,EAaZ;AACED,MAAAA,SAAS,EAAE,OADb;AAEEC,MAAAA,eAAe,EAAE;AAFnB,KAbY,EAiBZ;AACED,MAAAA,SAAS,EAAE,OADb;AAEEC,MAAAA,eAAe,EAAE;AAFnB,KAjBY,CAAd;AAsBD;;AACDC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,UAAMC,CAAC,GAAID,KAAK,GAAK,KAAKJ,MAAL,CAAYM,MAAjC;AACA,UAAMC,CAAC,GAAGF,CAAC,GAAGG,QAAQ,CAACH,CAAD,CAAtB;AACA,WAAOI,IAAI,CAACC,KAAL,CAAWH,CAAC,GAAK,KAAKP,MAAL,CAAYM,MAA7B,CAAP;AACD;;AACDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAyCE;AACA;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA,kBAEE,KAAKb,UAAL,CAAgBc,GAAhB,CAAoB,CAACC,IAAD,EAAOT,KAAP,KAAiB;AACnC,8BACE;AAEE,YAAA,SAAS,EAAC,WAFZ;AAAA,mCAIE,QAAC,QAAD;AAAU,cAAA,IAAI,EAAES,IAAhB;AAAsB,cAAA,KAAK,EAAE,KAAKb,MAAL,CAAY,KAAKG,QAAL,CAAcC,KAAd,CAAZ;AAA7B;AAAA;AAAA;AAAA;AAAA;AAJF,aACOA,KADP;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATD;AAFF;AAAA;AAAA;AAAA;AAAA;AA1CF;AAAA;AAAA;AAAA;AAAA,YADF;AA4DD;;AA7FwC,C,CA+F3C;AACA;AACA;;;AACA,eAAeV,YAAf","sourcesContent":["import React from 'react';\nimport CardNota from  '../CardNota'\nimport './ListaDeNotas.css'\nclass ListaDeNotas extends React.Component {\n  constructor(props) {\n    super(props)\n    this.notesArray = this.props.notes\n    this.colors = [\n      {\n        textColor: 'white',\n        backgroundColor: '#ec9706'\n      },\n      {\n        textColor: 'white',\n        backgroundColor: '#98b4d4'\n      },\n      {\n        textColor: 'white',\n        backgroundColor: '#ff6961'\n      },\n      {\n        textColor: 'black',\n        backgroundColor: '#fdfd96'\n      },\n      {\n        textColor: 'white',\n        backgroundColor: '#03bb85'\n      }\n    ]\n  }\n  getIndex(index) {\n    const a =  index / ( this.colors.length )\n    const b = a - parseInt(a)\n    return Math.round(b * ( this.colors.length ))\n  }\n  render() {\n    return (\n      <div>\n        {/* \n        Não prático:\n        <ul>\n          <li>\n            <div>Trabalho</div>\n            <CardNota/>\n          </li>\n        </ul>\n        <ul>\n          <div>Trabalho</div>\n          <li>\n            <CardNota/>\n          </li>\n        </ul>\n        <ul>\n          <div>Estudo</div>\n          <li>\n            <CardNota/>\n          </li>\n        </ul> */}\n\n\n        {/* \n        Não suportado, pela sixtaxe de chaves do 'for' \n        e pela declaração de var, let ou const\n        <ul>\n          {\n            const myArray = ['Trabalho', 'Trabalho', 'Estudo']\n            for(let i = 0; i < 3; i ++) {\n              return (\n                <li>\n                  <div>{myArray[i]}</div>\n                  <CardNota />\n                </li>\n              )\n            }\n          }\n        </ul> */}\n\n        {\n        //Assim dá:\n        <ul className=\"list-container\">\n        {\n          this.notesArray.map((note, index) => {\n            return (\n              <li \n                key={index} \n                className=\"list-item\"\n              >\n                <CardNota note={note} color={this.colors[this.getIndex(index)]}/>\n              </li>\n            )\n          })\n        }\n        </ul>\n        }\n      </div>\n    );\n  }\n}\n//Eu poderia usar apenas export tbm, mas dai precisaria\n//desestruturar o componente ao importar \n//import { ListaDeNotas } from ... \nexport default ListaDeNotas"]},"metadata":{},"sourceType":"module"}